
[
	{ "syntax" : [ 
		{ "program": [
			[ "#filter","#qre_top","#threshold" ]
		] },
		{ "#filter": [
			[ "filter([_])" ]
		] },
		{ "#threshold": [
			[ "threshold(0)" ]
		] },
		{ "#qre_top": [
			[ "$qre(","#qre_vs","$)" ]
		] },
		{ "#qre_vs": [
			[ "#agg_op","$(", "#qre_vs", "$,", "#feature_set", "$)" ],
			[ "#qre_ps" ]
		] },
		{ "#agg_op": [
			[ "max" ],
			[ "sum" ]
		] },
		{ "#feature_set": [
			[ "\\r0","$,", "\\r0" ],
			[ "\\r0" ]
		] },
		{ "#qre_ps": [
			[ "$split(", "#qre_ps", "$,", "#qre_ps", "$,", "#agg_op", "$)" ],
			[ "$iter(", "#qre_ps", "$,", "#agg_op", "$)" ],
			[ "$/","#re","$/?1" ]
		] },
		{ "#re": [
			[ "#re", "#re" ],
			[ "_" ],
			[ "*(_)" ],
			[ "#predicate_set" ]
		]},
		{ "#predicate_set": [
			[ "$||([", "#predicate_entry", "$]", "$,", "$[", "#predicate_entry", "$]", "$)" ],
			[ "$&&([", "#predicate_entry", "$]", "$,", "$[", "#predicate_entry", "$]", "$)" ],
			[ "$[", "#predicate_entry", "$]" ]		] },
		{ "#predicate_entry": [
			[ "\\r1", "$==", "$1","#index" ],
			[ "\\r2", "$->", "$1","#prefix" ],
			[ "\\r3", "$>=", "$1","#cap_index" ],
			[ "\\r4", "$<=", "$1","#bottom_index" ]
		] },
		{ "#index": [
			[ "0", "#index"],
			[ "1", "#index"],
			[ "0" ],
			[ "1" ]
		] },
		{ "#prefix": [
			[ "0", "#prefix"],
			[ "1", "#prefix"],
			[ "0" ],
			[ "1" ]
		] },
		{ "#cap_index": [
			[ "0", "#cap_index"],
			[ "1", "#cap_index"],
			[ "0" ],
			[ "1" ]
		] },
		{ "#bottom_index": [
			[ "0", "#bottom_index"],
			[ "1", "#bottom_index"],
			[ "0" ],
			[ "1" ]
		] }
	] },

	{ "positive_abstract" : [
		{ "#qre_ps": "iter( /_*(_)/?1, sum)" },
		{ "#re": "_*(_)" },
		{ "#predicate_set": "_" },
		{ "#predicate_entry": "_" },
		{ "#threshold": "threshold(0)" },
		{ "#filter": "filter([_])" },
		{ "#index": "" },
		{ "#prefix": "" },
		{ "#cap_index": "" },
		{ "#bottom_index": "" }
	] },

	{ "negative_abstract" : [
	] },

	{ "conditional_redundancy" : [
	] },
	
	{ "unconditional_redundancy" : [
		{ "#predicate_set ||([ #predicate_entry@1 ],[ #predicate_entry@1 ])" : "#re _" },
		{ "#re #re #re@1 #re@2 #re@3" : "#re _" },
		{ "#qre_ps split( #qre_ps split( #qre_ps@1, #qre_ps@2, #agg_op@3 ), #qre_ps@4, #agg_op@4)" : "#re _" },
		{ "#qre_ps iter( #qre_ps iter( #qre_ps@1, #agg_op@2 ) ,  #agg_op@3 )" : "#re _" }
	] }
]


